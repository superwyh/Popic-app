//
//  PostsView.m
//  PostBar
//
//  Created by chen on 5/27/11.
//  Copyright 2011 http://cnblogs.com/mainPage/. All rights reserved.
//

#import "PostsView.h"
#import "LookRevertController.h"
#import "JSON.h"
#import "ASIFormDataRequest.h"
#import "ServerConfig.h"
#import "PostBar_Model.h"
@implementation PostsView
@synthesize fromWebView;
@synthesize fromLabel;
@synthesize titleLabel;
@synthesize m_pid;
@synthesize m_uid;
@synthesize toTextView;
@synthesize m_image;
@synthesize m_viewNew;
@synthesize m_buttonPic;
// The designated initializer.  Override if you create the controller programmatically and want to perform customization that is not appropriate for viewDidLoad.
/*
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization.
    }
    return self;
}
*/
-(IBAction)back{
	[self.view removeFromSuperview];
}
-(IBAction)LookRevert{
  // The hud will dispable all input on the view (use the higest view possible in the view hierarchy)
  HUD = [[MBProgressHUD alloc] initWithView:self.view];

  // Add HUD to screen
  [self.view addSubview:HUD];

  // Regisete for HUD callbacks so we can remove it from the window at the right time
  HUD.delegate = self;

  HUD.labelText = @"Loading...";

  // Show the HUD while the provided method executes in a new thread
  [HUD showWhileExecuting:@selector(LookRevertHUD) onTarget:self withObject:nil animated:YES];
}
-(IBAction)LookRevertHUD
{
	   //http://192.168.1.14:8080/PostBar/servlet/RepostServlet?op=getinfobypid&pid=3
	NSArray *arr=[[PostBar_Model ShareObjects]Comments:m_pid];
	/*
	if (!arr) {
		UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"Network Failure"
																				 message:@"Please check your network" 
																				delegate:self
																	   cancelButtonTitle:@"Ok" 
																	   otherButtonTitles:nil];
									[alert show];
									[alert release];
							
	}else {
	 */
		NSLog(@"--------- arr＝%@",arr);

		[toTextView resignFirstResponder];
		[[NSNotificationCenter defaultCenter]postNotificationName:@"LookRevert" object:arr];
	//}

	//	NSURL *url=[NSURL URLWithString:urlString];
//	
//	NSData *data = [NSData dataWithContentsOfURL:url];
//	NSString *jsonString= [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding] ; //[NSString stringWithContentsOfURL:url encoding:NSUTF8StringEncoding error:nil];
//	//NSLog(@"jsonString＝＝%@",jsonString);
	//解析JSON数据，保存在字典类变量上
	//if (jsonString==nil) {
//		UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"Network Failure"
//													 message:@"Please check your network" 
//													delegate:self
//										   cancelButtonTitle:@"Ok" 
//										   otherButtonTitles:nil];
//		[alert show];
//		[alert release];
//	}else {
//		
//		NSLog(@"--------- jsonString＝%@",jsonString);
//		
//		NSArray *results= [jsonString JSONValue];
//		
//		[toTextView resignFirstResponder];
//		[[NSNotificationCenter defaultCenter]postNotificationName:@"LookRevert" object:results];
//	
//		}
	
	
	
}
-(IBAction)LookBigPic
{
	UIView *viewNew=[[UIView alloc]initWithFrame:CGRectMake(0, 0, 320, 460)];
	self.m_viewNew=viewNew;
	[viewNew release];
	[m_viewNew setBackgroundColor:[UIColor clearColor]];
	[self.view addSubview:m_viewNew];
	UIImageView *imageViewPic=[[UIImageView alloc]initWithImage:m_image];
	[imageViewPic setFrame:CGRectMake(0, 0, 320, 460-53)];
	[m_viewNew addSubview:imageViewPic];
	UIImageView *imageViewBG=[[UIImageView alloc]initWithFrame:CGRectMake(0, 407, 320, 53)];
	[imageViewBG setImage:[UIImage imageNamed:@"0001"]];
	[m_viewNew addSubview:imageViewBG];
	UIButton    *button =[[UIButton alloc]initWithFrame:CGRectMake(4, 413, 72, 47)];
	[button setImage:[UIImage imageNamed:@"back"] forState:UIControlStateNormal];
	[button addTarget:self action:@selector(backView) forControlEvents:UIControlEventTouchUpInside];
	[m_viewNew addSubview:button];
	[imageViewBG release];
	[imageViewPic release];
	[button release];
}
-(void)backView
{
	[m_viewNew removeFromSuperview];
}
-(IBAction)replayPost{
	// The hud will dispable all input on the view (use the higest view possible in the view hierarchy)
    HUD = [[MBProgressHUD alloc] initWithView:self.view];
	
    // Add HUD to screen
    [self.view addSubview:HUD];
	
    // Regisete for HUD callbacks so we can remove it from the window at the right time
    HUD.delegate = self;
	
    HUD.labelText = @"Loading...";
	
    // Show the HUD while the provided method executes in a new thread
    [HUD showWhileExecuting:@selector(replayPostHUD) onTarget:self withObject:nil animated:YES];
}
-(IBAction)replayPostHUD
{
	
//	NSString *post =[NSString	stringWithFormat:@"pid=%d&uid=%d&recontent=%@",m_pid,m_uid,toTextView.text];  
//	NSLog(@"-----pid===%d",m_pid);
//	NSString *urlString = [ServerRoot stringByAppendingFormat:@"/servlet/RepostServlet?op=addrepost&"] ;	
//	NSData *postData=[post dataUsingEncoding:NSUTF8StringEncoding];
//	NSMutableURLRequest *connectionRequest = [NSMutableURLRequest 
//											  requestWithURL:[NSURL URLWithString:urlString]];
//	[connectionRequest setHTTPMethod:@"POST"];
//	[connectionRequest setTimeoutInterval:100.0];
//	[connectionRequest setCachePolicy:NSURLRequestUseProtocolCachePolicy];
//	[connectionRequest setHTTPBody:postData];
//	NSData *data=[NSURLConnection sendSynchronousRequest:connectionRequest returningResponse:nil error:nil];
//	NSString *stringdata=[[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];    
		NSLog(@"PostsView>>>>>>m_pid====%d",m_pid);
	[toTextView resignFirstResponder];
	NSString *stringdata=[[PostBar_Model ShareObjects]RePost:m_pid Recontent:toTextView.text];
	
	if ([stringdata isEqualToString:@"Reply to success!"]) {
		UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"Notice" 
													 message:@"success!"
													delegate:self
										   cancelButtonTitle:@"OK" 
										   otherButtonTitles:nil];
		
		[alert show];
		[alert release];
	}else
	{
		UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"Notice" 
													 message:@"fail!"
													delegate:self
										   cancelButtonTitle:@"OK" 
										   otherButtonTitles:nil];
		
		[alert show];
		[alert release];
	}
}
-(IBAction)savePosts
{
	NSString *stringdata=[[PostBar_Model ShareObjects]SavePost:m_pid];
//	NSString *post =[NSString	stringWithFormat:@"pid=%d&uid=%d",m_pid,m_uid];  
//	
//	NSData *postData=[post dataUsingEncoding:NSUTF8StringEncoding];
//	NSString *urlString = [ServerRoot stringByAppendingFormat:@"/servlet/PostsServlet?op=updatesave&"] ;
//	NSMutableURLRequest *connectionRequest = [NSMutableURLRequest 
//											  requestWithURL:[NSURL URLWithString:urlString]];
//	[connectionRequest setHTTPMethod:@"POST"];
//	[connectionRequest setTimeoutInterval:100.0];
//	[connectionRequest setCachePolicy:NSURLRequestUseProtocolCachePolicy];
//	[connectionRequest setHTTPBody:postData];
//	NSData *data=[NSURLConnection sendSynchronousRequest:connectionRequest returningResponse:nil error:nil];
//	NSString *stringdata=[[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];    
	if ([stringdata isEqualToString:@"Modify success!"]) {
		UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"Notice" 
													 message:@"success!"
													delegate:self
										   cancelButtonTitle:@"OK" 
										   otherButtonTitles:nil];
		
		[alert show];
		[alert release];
		//[[NSNotificationCenter defaultCenter]postNotificationName:@"refreshPost" object:nil];
	}else if ([stringdata isEqualToString:@"Already added!"]) {
		UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"Notice" 
													 message:@"Already added"
													delegate:self
										   cancelButtonTitle:@"OK" 
										   otherButtonTitles:nil];
		
		[alert show];
		[alert release];
	}else
	{
		UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"Notice" 
													 message:@"fail!"
													delegate:self
										   cancelButtonTitle:@"OK" 
										   otherButtonTitles:nil];
		
		[alert show];
		[alert release];
	}
}
-(void)setPid:(int)pid 
{
	self.m_pid=pid;
	
}
-(IBAction)bigTouchButton{
	//[fromTextView resignFirstResponder];
	[toTextView resignFirstResponder];
}

// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad {
	fromWebView.backgroundColor=[UIColor clearColor];
	fromWebView.opaque = NO ;
    [super viewDidLoad];
}


/*
// Override to allow orientations other than the default portrait orientation.
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
    // Return YES for supported orientations.
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}
*/

- (void)didReceiveMemoryWarning {
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc. that aren't in use.
}

- (void)viewDidUnload {
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}


- (void)dealloc {
	[toTextView		release];
	[fromLabel		release];
	[titleLabel		release];
	[fromWebView	release];
    [super dealloc];
}

#pragma mark -
#pragma mark UITextField
- (BOOL)textFieldShouldReturn:(UITextField *)textField{    // called when 'return' key pressed. return NO to ignore.
	
	[textField resignFirstResponder];
	return YES;
}
#pragma mark -
#pragma mark UITextViewDelegate
- (BOOL)textViewShouldBeginEditing:(UITextView *)textView{
	[self.view setFrame:CGRectMake(0, -160, 320, 460)];
	return YES;
}
- (BOOL)textViewShouldEndEditing:(UITextView *)textView{
	[self.view setFrame:CGRectMake(0, 0, 320, 460)];
	return YES;
}
#pragma mark -
#pragma mark MBProgressHUDDelegate methods

- (void)hudWasHidden:(MBProgressHUD *)hud {
	NSLog(@"alslslslHUD: %@", hud);
    // Remove HUD from screen when the HUD was hidded
    [HUD removeFromSuperview];
    [HUD release];
}
@end
